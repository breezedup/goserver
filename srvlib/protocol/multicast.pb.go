// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.5.1
// source: multicast.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SSPacketMulticast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*MCSessionUnion `protobuf:"bytes,1,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
	PacketId int32             `protobuf:"varint,2,opt,name=PacketId,proto3" json:"PacketId,omitempty"`
	Data     []byte            `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *SSPacketMulticast) Reset() {
	*x = SSPacketMulticast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multicast_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSPacketMulticast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSPacketMulticast) ProtoMessage() {}

func (x *SSPacketMulticast) ProtoReflect() protoreflect.Message {
	mi := &file_multicast_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSPacketMulticast.ProtoReflect.Descriptor instead.
func (*SSPacketMulticast) Descriptor() ([]byte, []int) {
	return file_multicast_proto_rawDescGZIP(), []int{0}
}

func (x *SSPacketMulticast) GetSessions() []*MCSessionUnion {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *SSPacketMulticast) GetPacketId() int32 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *SSPacketMulticast) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MCSessionUnion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mccs *MCClientSession `protobuf:"bytes,1,opt,name=Mccs,proto3" json:"Mccs,omitempty"`
	Mcss *MCServerSession `protobuf:"bytes,2,opt,name=Mcss,proto3" json:"Mcss,omitempty"`
}

func (x *MCSessionUnion) Reset() {
	*x = MCSessionUnion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multicast_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MCSessionUnion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCSessionUnion) ProtoMessage() {}

func (x *MCSessionUnion) ProtoReflect() protoreflect.Message {
	mi := &file_multicast_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCSessionUnion.ProtoReflect.Descriptor instead.
func (*MCSessionUnion) Descriptor() ([]byte, []int) {
	return file_multicast_proto_rawDescGZIP(), []int{1}
}

func (x *MCSessionUnion) GetMccs() *MCClientSession {
	if x != nil {
		return x.Mccs
	}
	return nil
}

func (x *MCSessionUnion) GetMcss() *MCServerSession {
	if x != nil {
		return x.Mcss
	}
	return nil
}

type MCClientSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId int64 `protobuf:"varint,1,opt,name=SId,proto3" json:"SId,omitempty"`
}

func (x *MCClientSession) Reset() {
	*x = MCClientSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multicast_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MCClientSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCClientSession) ProtoMessage() {}

func (x *MCClientSession) ProtoReflect() protoreflect.Message {
	mi := &file_multicast_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCClientSession.ProtoReflect.Descriptor instead.
func (*MCClientSession) Descriptor() ([]byte, []int) {
	return file_multicast_proto_rawDescGZIP(), []int{2}
}

func (x *MCClientSession) GetSId() int64 {
	if x != nil {
		return x.SId
	}
	return 0
}

type MCServerSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SArea int32 `protobuf:"varint,1,opt,name=SArea,proto3" json:"SArea,omitempty"`
	SType int32 `protobuf:"varint,2,opt,name=SType,proto3" json:"SType,omitempty"`
	SId   int32 `protobuf:"varint,3,opt,name=SId,proto3" json:"SId,omitempty"`
}

func (x *MCServerSession) Reset() {
	*x = MCServerSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multicast_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MCServerSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCServerSession) ProtoMessage() {}

func (x *MCServerSession) ProtoReflect() protoreflect.Message {
	mi := &file_multicast_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCServerSession.ProtoReflect.Descriptor instead.
func (*MCServerSession) Descriptor() ([]byte, []int) {
	return file_multicast_proto_rawDescGZIP(), []int{3}
}

func (x *MCServerSession) GetSArea() int32 {
	if x != nil {
		return x.SArea
	}
	return 0
}

func (x *MCServerSession) GetSType() int32 {
	if x != nil {
		return x.SType
	}
	return 0
}

func (x *MCServerSession) GetSId() int32 {
	if x != nil {
		return x.SId
	}
	return 0
}

var File_multicast_proto protoreflect.FileDescriptor

var file_multicast_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x79, 0x0a, 0x11, 0x53,
	0x53, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4d, 0x43,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x0e, 0x4d, 0x43, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x4d, 0x63, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x4d, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x4d, 0x63, 0x63, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x4d, 0x63, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x4d, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x4d, 0x63, 0x73, 0x73, 0x22, 0x23, 0x0a, 0x0f, 0x4d, 0x43, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x53, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0f, 0x4d,
	0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x41, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53,
	0x41, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x53, 0x49, 0x64, 0x42, 0x0c, 0x5a, 0x0a,
	0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_multicast_proto_rawDescOnce sync.Once
	file_multicast_proto_rawDescData = file_multicast_proto_rawDesc
)

func file_multicast_proto_rawDescGZIP() []byte {
	file_multicast_proto_rawDescOnce.Do(func() {
		file_multicast_proto_rawDescData = protoimpl.X.CompressGZIP(file_multicast_proto_rawDescData)
	})
	return file_multicast_proto_rawDescData
}

var file_multicast_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_multicast_proto_goTypes = []interface{}{
	(*SSPacketMulticast)(nil), // 0: protocol.SSPacketMulticast
	(*MCSessionUnion)(nil),    // 1: protocol.MCSessionUnion
	(*MCClientSession)(nil),   // 2: protocol.MCClientSession
	(*MCServerSession)(nil),   // 3: protocol.MCServerSession
}
var file_multicast_proto_depIdxs = []int32{
	1, // 0: protocol.SSPacketMulticast.Sessions:type_name -> protocol.MCSessionUnion
	2, // 1: protocol.MCSessionUnion.Mccs:type_name -> protocol.MCClientSession
	3, // 2: protocol.MCSessionUnion.Mcss:type_name -> protocol.MCServerSession
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_multicast_proto_init() }
func file_multicast_proto_init() {
	if File_multicast_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_multicast_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSPacketMulticast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_multicast_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MCSessionUnion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_multicast_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MCClientSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_multicast_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MCServerSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_multicast_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_multicast_proto_goTypes,
		DependencyIndexes: file_multicast_proto_depIdxs,
		MessageInfos:      file_multicast_proto_msgTypes,
	}.Build()
	File_multicast_proto = out.File
	file_multicast_proto_rawDesc = nil
	file_multicast_proto_goTypes = nil
	file_multicast_proto_depIdxs = nil
}
